feature vn-segment
feature nv overlay 
feature vn-segment-vlan-based
feature interface-vlan
feature bgp
nv overlay evpn 
hardware access-list tcam region racl 512 	
hardware access-list tcam region arp-ether 256 double-wide 	
interface Vlan 1

{% if "sspine-evpn" in groups %}
  {% set index= 219 + member  | int %}	
  {% set local_as= 65220 -%}	
{% elif "spine-evpn" in groups %}
  {% set index= 199 + member  | int %}	
  {% set local_as= 65200 -%}	
{% elif "tor-edge" in groups %}
  {% set index= 237 + 1 * member | int + 2 * pod | int %}	
  {% set local_as= 65000 -%}	
{% elif "tor-evpn" in groups %}
  {% set index= 1 * member | int + 2 * pod | int - 3 %}	
  {% set local_as= 65000 -%}	
{% endif %}
{% set rank = lookup("topology","rank") %}
{% set underlay = lookup("topology","underlay") %}
{% set port_map = lookup('topology','port-map').split() %}

interface loopback0
  ip address {{ underlay | ipsubnet(24,index) | ipsubnet(32,0) }} tag 666
{% if "s-spine-evpn" in groups %} {# MULticast address #}
  ip pim sparse-mode
feature pim
ip pim rp-address 100.1.1.1 group-list 224.0.0.0/4
ip pim anycast-rp 100.1.1.1 10.1.1.1
ip pim anycast-rp 100.1.1.1 20.1.1.1
interface loopback1
  ip address 100.1.1.1/32
  ip pim sparse-mode
{% endif %}

{% for remote, local_port, remote_port in lookup('topology','fabric-topology').items() | myport %}
  {% if "." not in remote %}
    {% set remote = "{}.{}.blade-group.net".format(remote,location) -%}
  {% endif %}
  {% set scope_remote = scope(remote) -%}
  {% if "sspine-evpn" in scope_remote.groups %}
    {% set remote_index= 219 + scope_remote.member  | int -%}	
    {% set remote_as= 65220  | int -%}	
  {% elif "spine-evpn" in scope_remote.groups %}
    {% set remote_index= 199 + scope_remote.member  | int -%}	
    {% set remote_as= 65200  | int -%}	
  {% elif "tor-evpn" in scope_remote.groups %}
    {% set remote_index= 1 * scope_remote.member | int + 2 * scope_remote.pod  | int - 3 -%}	
    {% set remote_as= 65000 -%}	
  {% elif "tor-edge" in scope_remote.groups %}
    {% set remote_index= 237 + 1 * member | int + 2 * pod | int -%}	
    {% set remote_as= 65000 -%}	
  {% endif %}

  {% if rank < lookup("topology","rank",remote ) -%}
  {% set local_address = underlay | ipsubnet(24,index) | ipsubnet(31,local_port) %}
  {% else -%}
  {% set local_address = "{}/31".format(underlay | ipsubnet(24,remote_index) | ipsubnet(31,remote_port) | ippeer ) %} {# ouai c est degeux mais ca marche #}
{% endif %}

interface {{ port_map[local_port|store("topology", remote, remote_port)]}}
  description "{{ "{}:{}".format(remote, remote_port) }}"
  ip address {{ local_address }} tag 666
  mtu 9216
  no switchport
  no shutdown

{# UNDERLAY #}
router bgp {{ local_as }}
  router-id {{ underlay | ipsubnet(24,index) | ipsubnet(32,0) | ipaddr('address') }}
  address-family ipv4 unicast
    maximum-paths 32
    redistribute direct route-map DIRECT-ROUTES-MAP
  neighbor {{ local_address | ippeer }}
    description "{{ "UNDERLAY_{}".format(scope_remote.shorthost) }}"
    remote-as {{ remote_as }}
    address-family ipv4 unicast
      allowas-in 3
{% endfor %}

{# OVERLAY #}
{% for device in devices("environment","location", "groups==tor-evpn") if not device == "{}.blade-group.net".format(host,location) and "tor-evpn" in groups %}
  {% set scope_remote = scope(device) -%}
  {% set remote_as= 65000 -%}	
  {% if "tor-edge" in scope_remote.groups %}
    {% set remote_index= 237 + 1 * scope_remote.member | int + 2 * scope_remote.pod | int -%}	
  {% elif "tor-evpn" in scope_remote.groups %}
    {% set remote_index= 1 * scope_remote.member | int + 2 * scope_remote.pod  | int - 3 -%}	
  {% endif %}
  
    {% if ("tor-edge" in scope_remote.groups and "tor-evpn" in groups) or ("tor-evpn" in scope_remote.groups and "tor-edge" in groups) %}
router bgp {{ local_as }}
  address-family l2vpn evpn
    nexthop route-map NEXT-HOP-UNCH
    retain route-target all
  neighbor {{ underlay | ipsubnet(24,remote_index) | ipsubnet(32,0) | ipaddr('address') }}
    description "{{ "OVERLAY_{}".format(scope_remote.shorthost) }}"
    update-source loopback0
    remote-as {{ remote_as }}
    address-family l2vpn evpn
      send-community
      send-community extended
      route-map NEXT-HOP-UNCH out
      {% if "tor-edge" in groups %}
    route-reflector-client
      {% endif %}
    {% endif %}
{% endfor %}

route-map NEXT-HOP-UNCH permit 10
  set ip next-hop unchanged

route-map DIRECT-ROUTES-MAP permit 10
  match tag 666

{% if not "tor-edge" in groups and "tor-evpn" in groups %}
fabric forwarding anycast-gateway-mac 0000.2222.3333
vrf context Tenant-1
 vni 900001
 rd auto
 address-family ipv4 unicast
  route-target both auto
  route-target both auto evpn

vlan 101
  vn-segment 900001

interface vlan 101
  no shutdown
  vrf member Tenant-1
  ip forward

router bgp {{ local_as }}
  vrf Tenant-1
    address-family ipv4 unicast

vlan 1000
  vn-segment 5000

interface nve1
  no shutdown
  source-interface loopback0
  host-reachability protocol bgp
  member vni 5000
    suppress-arp
    ingress-replication protocol bgp
  member vni 900001 associate-vrf

interface vlan 1000
  no shutdown
  vrf member Tenant-1
  ip address 192.168.0.1/24
  fabric forwarding mode anycast-gateway

evpn
  vni 5000 l2
    rd auto
    route-target import auto
    route-target export auto
  
interface eth 1/10
  switchport
  switchport access vlan 1000
  no shutdown
  description {{ "linux-vni5000".format(10 | store("topology", "linux-vni5000", 1)) }}
{% endif %}
